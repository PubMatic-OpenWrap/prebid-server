// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/PubMatic-OpenWrap/prebid-server/modules/pubmatic/vastunwrap/stats (interfaces: MetricsEngine)

// Package mock_stats is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockMetricsEngine is a mock of MetricsEngine interface
type MockMetricsEngine struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsEngineMockRecorder
}

// MockMetricsEngineMockRecorder is the mock recorder for MockMetricsEngine
type MockMetricsEngineMockRecorder struct {
	mock *MockMetricsEngine
}

// NewMockMetricsEngine creates a new mock instance
func NewMockMetricsEngine(ctrl *gomock.Controller) *MockMetricsEngine {
	mock := &MockMetricsEngine{ctrl: ctrl}
	mock.recorder = &MockMetricsEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMetricsEngine) EXPECT() *MockMetricsEngineMockRecorder {
	return m.recorder
}

// RecordRequestStatus mocks base method
func (m *MockMetricsEngine) RecordRequestStatus(arg0, arg1, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RecordRequestStatus", arg0, arg1, arg2)
}

// RecordRequestStatus indicates an expected call of RecordRequestStatus
func (mr *MockMetricsEngineMockRecorder) RecordRequestStatus(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordRequestStatus", reflect.TypeOf((*MockMetricsEngine)(nil).RecordRequestStatus), arg0, arg1, arg2)
}

// RecordWrapperCount mocks base method
func (m *MockMetricsEngine) RecordWrapperCount(arg0, arg1, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RecordWrapperCount", arg0, arg1, arg2)
}

// RecordWrapperCount indicates an expected call of RecordRequestStatus
func (mr *MockMetricsEngineMockRecorder) RecordWrapperCount(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordWrapperCount", reflect.TypeOf((*MockMetricsEngine)(nil).RecordWrapperCount), arg0, arg1, arg2)
}

// RecordRequestTime mocks base method
func (m *MockMetricsEngine) RecordRequestTime(arg0, arg1 string, arg2 time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RecordRequestTime", arg0, arg1, arg2)
}

// RecordRequestTime indicates an expected call of RecordRequestTime
func (mr *MockMetricsEngineMockRecorder) RecordRequestTime(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordRequestTime", reflect.TypeOf((*MockMetricsEngine)(nil).RecordRequestTime), arg0, arg1, arg2)
}
