// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/PubMatic-OpenWrap/prebid-server/v3/modules/pubmatic/openwrap/profilemetadata (interfaces: ProfileMetaData)

// Package mock_profilemetadata is a generated GoMock package.
package mock_profilemetadata

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProfileMetaData is a mock of ProfileMetaData interface
type MockProfileMetaData struct {
	ctrl     *gomock.Controller
	recorder *MockProfileMetaDataMockRecorder
}

// MockProfileMetaDataMockRecorder is the mock recorder for MockProfileMetaData
type MockProfileMetaDataMockRecorder struct {
	mock *MockProfileMetaData
}

// NewMockProfileMetaData creates a new mock instance
func NewMockProfileMetaData(ctrl *gomock.Controller) *MockProfileMetaData {
	mock := &MockProfileMetaData{ctrl: ctrl}
	mock.recorder = &MockProfileMetaDataMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProfileMetaData) EXPECT() *MockProfileMetaDataMockRecorder {
	return m.recorder
}

// GetAppIntegrationPath mocks base method
func (m *MockProfileMetaData) GetAppIntegrationPath(arg0 string) (int, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAppIntegrationPath", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetAppIntegrationPath indicates an expected call of GetAppIntegrationPath
func (mr *MockProfileMetaDataMockRecorder) GetAppIntegrationPath(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAppIntegrationPath", reflect.TypeOf((*MockProfileMetaData)(nil).GetAppIntegrationPath), arg0)
}

// GetAppSubIntegrationPath mocks base method
func (m *MockProfileMetaData) GetAppSubIntegrationPath(arg0 string) (int, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAppSubIntegrationPath", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetAppSubIntegrationPath indicates an expected call of GetAppSubIntegrationPath
func (mr *MockProfileMetaDataMockRecorder) GetAppSubIntegrationPath(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAppSubIntegrationPath", reflect.TypeOf((*MockProfileMetaData)(nil).GetAppSubIntegrationPath), arg0)
}

// GetProfileTypePlatform mocks base method
func (m *MockProfileMetaData) GetProfileTypePlatform(arg0 string) (int, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileTypePlatform", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetProfileTypePlatform indicates an expected call of GetProfileTypePlatform
func (mr *MockProfileMetaDataMockRecorder) GetProfileTypePlatform(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileTypePlatform", reflect.TypeOf((*MockProfileMetaData)(nil).GetProfileTypePlatform), arg0)
}
