diff --git a/adapters/appnexus/appnexus.go b/adapters/appnexus/appnexus.go
index af7f0386..1da43361 100644
--- a/adapters/appnexus/appnexus.go
+++ b/adapters/appnexus/appnexus.go
@@ -475,7 +475,7 @@ func resolvePlatformID(platformID string) int {
 
 func loadCategoryMapFromFileSystem() map[string]string {
 	// Load custom options for our adapter (currently just a lookup table to convert appnexus => iab categories)
-	opts, err := ioutil.ReadFile("./home/http/GO_SERVER/dmhbserver/static/adapter/appnexus/opts.json")
+	opts, err := ioutil.ReadFile("./Users/jaydeepmohite/go/src/header-bidding/resource/static/adapter/appnexus/opts.json")
 	//this is for tests
 	if err != nil {
 		opts, err = ioutil.ReadFile("./static/adapter/appnexus/opts.json")
diff --git a/config/config.go b/config/config.go
index 05e439e3..0f43a78e 100644
--- a/config/config.go
+++ b/config/config.go
@@ -724,7 +724,7 @@ func SetupViper(v *viper.Viper, filename string) {
 	v.SetDefault("metrics.prometheus.subsystem", "")
 	v.SetDefault("metrics.prometheus.timeout_ms", 10000)
 	v.SetDefault("category_mapping.filesystem.enabled", true)
-	v.SetDefault("category_mapping.filesystem.directorypath", "/home/http/GO_SERVER/dmhbserver/static/category-mapping")
+	v.SetDefault("category_mapping.filesystem.directorypath", "/Users/jaydeepmohite/go/src/header-bidding/resource/static/category-mapping")
 	v.SetDefault("category_mapping.http.endpoint", "")
 	v.SetDefault("stored_requests.filesystem.enabled", false)
 	v.SetDefault("stored_requests.filesystem.directorypath", "./stored_requests/data/by_id")
diff --git a/exchange/exchange.go b/exchange/exchange.go
index 4daa342c..bdca77e5 100644
--- a/exchange/exchange.go
+++ b/exchange/exchange.go
@@ -210,7 +210,8 @@ func (e *exchange) HoldAuction(ctx context.Context, r AuctionRequest, debugLog *
 	bidAdjustmentFactors := getExtBidAdjustmentFactors(requestExt)
 
 	// If floors feature is enabled at server and request level, Update floors values in impression object
-	if e.floor.Enabled() && requestExt.Prebid.Floors.Enabled {
+	if e.floor.Enabled() && floors.IsRequestEnabledWithFloor(requestExt) {
+		fmt.Printf("\n ********  UpdateImpsWithFloors ******** \n")
 		errs = floors.UpdateImpsWithFloors(requestExt.Prebid.Floors, r.BidRequest)
 	}
 
diff --git a/floors/resolve_floor.go b/floors/resolve_floor.go
index e0bfea73..a23dfe72 100644
--- a/floors/resolve_floor.go
+++ b/floors/resolve_floor.go
@@ -3,6 +3,7 @@ package floors
 import (
 	"fmt"
 	"math/bits"
+	"math/rand"
 	"sort"
 	"strings"
 
@@ -13,18 +14,66 @@ import (
 type RequestType string
 
 const (
-	DEFAULT_DELIMITER string = "|"
-	CATCH_ALL         string = "*"
+	DEFAULT_DELIMITER      string = "|"
+	CATCH_ALL              string = "*"
+	SKIP_RATE_MIN          int    = 0
+	SKIP_RATE_MAX          int    = 100
+	MODEL_WEIGHT_MAX_VALUE int    = 1000000
+	MODEL_WEIGHT_MIN_VALUE int    = 0
 )
 
+func IsRequestEnabledWithFloor(requestExt *openrtb_ext.ExtRequest) bool {
+	if requestExt.Prebid.Floors != nil && requestExt.Prebid.Floors.Enabled != nil && *requestExt.Prebid.Floors.Enabled == true {
+		return true
+	} else {
+		return false
+	}
+}
+
+func shouldSkipFloors(floorData *openrtb_ext.PriceFloorData) bool {
+	var skipRate int
+
+	if floorData.ModelGroups[0].SkipRate > 0 {
+		skipRate = floorData.ModelGroups[0].SkipRate
+	} else {
+		skipRate = floorData.SkipRate
+	}
+
+	if skipRate > 0 && skipRate > rand.Intn(SKIP_RATE_MAX) {
+		return true
+	} else {
+		return false
+	}
+}
+
 func UpdateImpsWithFloors(floorExt *openrtb_ext.PriceFloorRules, request *openrtb2.BidRequest) []error {
 	var floorErrList []error
 	var floorVal float64
+
 	floorData := floorExt.Data
 
+	floorModelErrList := validateFloorModelGroups(floorData.ModelGroups)
+
+	if len(floorData.ModelGroups) > 1 {
+		selectFloorModelGroup(floorData.ModelGroups)
+	}
+
+	if floorData.ModelGroups[0].Schema.Delimiter == "" {
+		floorData.ModelGroups[0].Schema.Delimiter = DEFAULT_DELIMITER
+	}
+
+	floorExt.Skipped = new(bool)
+	if shouldSkipFloors(floorData) == true {
+		*floorExt.Skipped = true
+		return floorModelErrList
+	} else {
+		*floorExt.Skipped = false
+	}
+
 	floorErrList = validateFloorRules(floorData.ModelGroups[0].Schema, floorData.ModelGroups[0].Schema.Delimiter, floorData.ModelGroups[0].Values)
 	for i := 0; i < len(request.Imp); i++ {
 		desiredRuleKey := CreateRuleKey(floorData.ModelGroups[0].Schema, request, request.Imp[i])
+		fmt.Printf("\n Desired Key = %v", desiredRuleKey)
 		matchedRule := findRule(floorData.ModelGroups[0].Values, floorData.ModelGroups[0].Schema.Delimiter, desiredRuleKey, len(floorData.ModelGroups[0].Schema.Fields))
 
 		if matchedRule == "" {
@@ -32,7 +81,7 @@ func UpdateImpsWithFloors(floorExt *openrtb_ext.PriceFloorRules, request *openrt
 		} else {
 			floorVal = floorData.ModelGroups[0].Values[matchedRule]
 		}
-
+		fmt.Printf("\n Matched Rule = %v", matchedRule)
 		if floorExt.FloorMin != 0.0 && floorVal < floorExt.FloorMin {
 			request.Imp[i].BidFloor = floorExt.FloorMin
 		} else {
@@ -42,7 +91,54 @@ func UpdateImpsWithFloors(floorExt *openrtb_ext.PriceFloorRules, request *openrt
 		request.Imp[i].BidFloorCur = "USD"
 
 	}
-	return floorErrList
+	floorModelErrList = append(floorModelErrList, floorErrList...)
+	return floorModelErrList
+}
+
+func validateFloorModelGroups(modelGroups []openrtb_ext.PriceFloorModelGroup) []error {
+	var floorModelErrList []error
+
+	for i, modelGroup := range modelGroups {
+
+		if modelGroup.SkipRate < SKIP_RATE_MIN || modelGroup.SkipRate > SKIP_RATE_MAX {
+			floorModelErrList = append(floorModelErrList, fmt.Errorf("Invalid Floor Model = '%v' due to SkipRate = '%v'", modelGroup.ModelVersion, modelGroup.SkipRate))
+			modelGroups = append(modelGroups[:i], modelGroups[i+1:]...)
+			continue
+		}
+
+		if modelGroup.ModelWeight < MODEL_WEIGHT_MIN_VALUE || modelGroup.ModelWeight > MODEL_WEIGHT_MAX_VALUE {
+			floorModelErrList = append(floorModelErrList, fmt.Errorf("Invalid Floor Model = '%v' due to ModelWeight = '%v'", modelGroup.ModelVersion, modelGroup.ModelWeight))
+			modelGroups = append(modelGroups[:i], modelGroups[i+1:]...)
+			continue
+		}
+	}
+	return floorModelErrList
+
+}
+
+func selectFloorModelGroup(modelGroups []openrtb_ext.PriceFloorModelGroup) {
+	totalModelWeight := 0
+
+	for i := 0; i < len(modelGroups); i++ {
+		totalModelWeight += modelGroups[i].ModelWeight
+	}
+
+	sort.SliceStable(modelGroups, func(i, j int) bool {
+		return modelGroups[i].ModelWeight < modelGroups[j].ModelWeight
+	})
+
+	winWeight := rand.Intn(totalModelWeight)
+
+	for i, modelGroup := range modelGroups {
+		winWeight -= modelGroup.ModelWeight
+		if winWeight <= 0 {
+			modelGroups = append([]openrtb_ext.PriceFloorModelGroup{modelGroup}, append((modelGroups)[:i], (modelGroups)[i+1:]...)...)
+
+			return
+		}
+	}
+	modelGroups = append([]openrtb_ext.PriceFloorModelGroup{modelGroups[len(modelGroups)-1]}, (modelGroups)[:len(modelGroups)-1]...)
+
 }
 
 func validateFloorRules(Schema openrtb_ext.PriceFloorSchema, delimiter string, RuleValues map[string]float64) []error {
@@ -54,7 +150,7 @@ func validateFloorRules(Schema openrtb_ext.PriceFloorSchema, delimiter string, R
 		parsedKey := strings.Split(key, delimiter)
 		if len(parsedKey) != schemaLen {
 			// Number of fields are not matching
-			floorErrList = append(floorErrList, fmt.Errorf("Invalid Floor Rule = '%s' for Schema Fields = '%v'  ", key, Schema.Fields))
+			floorErrList = append(floorErrList, fmt.Errorf("Invalid Floor Rule = '%s' for Schema Fields = '%v'", key, Schema.Fields))
 			delete(RuleValues, key)
 		}
 	}
diff --git a/floors/resolve_floor_test.go b/floors/resolve_floor_test.go
index 1a65f897..d1ee731a 100644
--- a/floors/resolve_floor_test.go
+++ b/floors/resolve_floor_test.go
@@ -91,7 +91,88 @@ func TestPrepareRuleCombinations(t *testing.T) {
 }
 
 func TestUpdateImpsWithFloors1(t *testing.T) {
-	floorExt := &openrtb_ext.PriceFloorRules{Data: openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}, Delimiter: "|"},
+
+	floorExt := &openrtb_ext.PriceFloorRules{Data: &openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "country", "deviceType"}},
+		Values: map[string]float64{
+			"audio|USA|phone": 1.01,
+		}, Default: 0.01}}}}
+
+	floorExt2 := &openrtb_ext.PriceFloorRules{Data: &openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "country", "deviceType"}},
+		Values: map[string]float64{
+			"audio|USA|tablet": 1.01,
+		}, Default: 0.01}}}}
+
+	floorExt3 := &openrtb_ext.PriceFloorRules{FloorMin: 1.00, Data: &openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "country", "bundle"}},
+		Values: map[string]float64{
+			"native|USA|bundle1": 0.01,
+		}, Default: 0.01}}}}
+	tt := []struct {
+		name     string
+		floorExt *openrtb_ext.PriceFloorRules
+		request  *openrtb2.BidRequest
+		floorVal float64
+		floorCur string
+	}{
+		{
+			name: "audio|USA|phone",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Publisher: &openrtb2.Publisher{Domain: "www.website.com"},
+				},
+				Device: &openrtb2.Device{Geo: &openrtb2.Geo{Country: "USA"}, UA: "Phone"},
+				Imp:    []openrtb2.Imp{{ID: "1234", Audio: &openrtb2.Audio{MaxDuration: 10}}},
+				Ext:    json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt: floorExt,
+			floorVal: 1.01,
+			floorCur: "USD",
+		},
+		{
+			name: "audio|USA|tablet",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Publisher: &openrtb2.Publisher{Domain: "www.website.com"},
+				},
+				Device: &openrtb2.Device{Geo: &openrtb2.Geo{Country: "USA"}, UA: "tablet"},
+				Imp:    []openrtb2.Imp{{ID: "1234", Audio: &openrtb2.Audio{MaxDuration: 10}}},
+				Ext:    json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt: floorExt2,
+			floorVal: 1.01,
+			floorCur: "USD",
+		},
+		{
+			name: "audio|USA|bundle1",
+			request: &openrtb2.BidRequest{
+				App: &openrtb2.App{
+					Bundle:    "bundle1",
+					Publisher: &openrtb2.Publisher{Domain: "www.website.com"},
+				},
+				Device: &openrtb2.Device{Geo: &openrtb2.Geo{Country: "USA"}, UA: "tablet"},
+				Imp:    []openrtb2.Imp{{ID: "1234", Native: &openrtb2.Native{}}},
+				Ext:    json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt: floorExt3,
+			floorVal: 1.00,
+			floorCur: "USD",
+		},
+	}
+
+	for _, tc := range tt {
+		t.Run(tc.name, func(t *testing.T) {
+			_ = UpdateImpsWithFloors(tc.floorExt, tc.request)
+			if !reflect.DeepEqual(tc.request.Imp[0].BidFloor, tc.floorVal) {
+				t.Errorf("Floor Value error: \nreturn:\t%v\nwant:\t%v", tc.request.Imp[0].BidFloor, tc.floorVal)
+			}
+			if !reflect.DeepEqual(tc.request.Imp[0].BidFloorCur, tc.floorCur) {
+				t.Errorf("Floor Currency error: \nreturn:\t%v\nwant:\t%v", tc.request.Imp[0].BidFloor, tc.floorCur)
+			}
+		})
+	}
+}
+func TestUpdateImpsWithFloors(t *testing.T) {
+
+	floorExt := &openrtb_ext.PriceFloorRules{Data: &openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}},
 		Values: map[string]float64{
 			"banner|300x250|www.website.com": 1.01,
 			"banner|300x250|*":               2.01,
@@ -111,28 +192,29 @@ func TestUpdateImpsWithFloors1(t *testing.T) {
 			"*|*|*":                          16.01,
 		}, Default: 0.01}}}}
 
-	floorExt2 := &openrtb_ext.PriceFloorRules{Data: openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}, Delimiter: "|"},
+	floorExt2 := &openrtb_ext.PriceFloorRules{Data: &openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "siteDomain"}, Delimiter: "|"},
 		Values: map[string]float64{
-			"banner|300x250|www.publisher.com": 1.01,
-			"banner|300x250|*":                 2.01,
-			"banner|300x600|www.publisher.com": 3.01,
-			"banner|300x600|*":                 4.01,
-			"banner|728x90|www.website.com":    5.01,
-			"banner|728x90|*":                  6.01,
-			"banner|*|www.website.com":         7.01,
-			"banner|*|*":                       8.01,
-			"video|*|*":                        9.01,
-			"*|300x250|www.website.com":        10.01,
-			"*|300x250|*":                      10.11,
-			"*|300x600|www.website.com":        11.01,
-			"*|300x600|*":                      12.01,
-			"*|728x90|www.website.com":         13.01,
-			"*|728x90|*":                       14.01,
-			"*|*|www.website.com":              15.01,
-			"*|*|*":                            16.01,
+			"banner|300x250|www.publisher.com":   1.01,
+			"banner|300x250|*":                   2.01,
+			"banner|300x600|www.publisher.com":   3.01,
+			"banner|300x600|*":                   4.01,
+			"banner|728x90|www.website.com":      5.01,
+			"banner|728x90|www.website.com|test": 5.01,
+			"banner|728x90|*":                    6.01,
+			"banner|*|www.website.com":           7.01,
+			"banner|*|*":                         8.01,
+			"video|*|*":                          9.01,
+			"*|300x250|www.website.com":          10.01,
+			"*|300x250|*":                        10.11,
+			"*|300x600|www.website.com":          11.01,
+			"*|300x600|*":                        12.01,
+			"*|728x90|www.website.com":           13.01,
+			"*|728x90|*":                         14.01,
+			"*|*|www.website.com":                15.01,
+			"*|*|*":                              16.01,
 		}, Default: 0.01}}}}
 
-	floorExt3 := &openrtb_ext.PriceFloorRules{Data: openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}, Delimiter: "|"},
+	floorExt3 := &openrtb_ext.PriceFloorRules{Data: &openrtb_ext.PriceFloorData{ModelGroups: []openrtb_ext.PriceFloorModelGroup{{Schema: openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "pubDomain"}, Delimiter: "|"},
 		Values: map[string]float64{
 			"banner|300x250|www.publisher.com": 1.01,
 			"banner|300x250|*":                 2.01,
@@ -144,6 +226,8 @@ func TestUpdateImpsWithFloors1(t *testing.T) {
 			"banner|*|*":                       8.01,
 		}, Default: 0.01}}}}
 
+	width := int64(300)
+	height := int64(600)
 	tt := []struct {
 		name     string
 		floorExt *openrtb_ext.PriceFloorRules
@@ -155,7 +239,7 @@ func TestUpdateImpsWithFloors1(t *testing.T) {
 			name: "banner|300x250|www.website.com",
 			request: &openrtb2.BidRequest{
 				Site: &openrtb2.Site{
-					Domain: "www.website.com",
+					Publisher: &openrtb2.Publisher{Domain: "www.website.com"},
 				},
 				Imp: []openrtb2.Imp{{ID: "1234", Banner: &openrtb2.Banner{Format: []openrtb2.Format{{W: 300, H: 250}}}}},
 				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
@@ -170,7 +254,7 @@ func TestUpdateImpsWithFloors1(t *testing.T) {
 				Site: &openrtb2.Site{
 					Domain: "www.website.com",
 				},
-				Imp: []openrtb2.Imp{{ID: "1234", Banner: &openrtb2.Banner{Format: []openrtb2.Format{{W: 300, H: 600}}}}},
+				Imp: []openrtb2.Imp{{ID: "1234", Banner: &openrtb2.Banner{W: &width, H: &height}}},
 				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
 			},
 			floorExt: floorExt,
@@ -180,7 +264,7 @@ func TestUpdateImpsWithFloors1(t *testing.T) {
 		{
 			name: "*|*|www.website.com",
 			request: &openrtb2.BidRequest{
-				Site: &openrtb2.Site{
+				App: &openrtb2.App{
 					Domain: "www.website.com",
 				},
 				Imp: []openrtb2.Imp{{ID: "1234", Video: &openrtb2.Video{W: 640, H: 480}}},
@@ -194,38 +278,37 @@ func TestUpdateImpsWithFloors1(t *testing.T) {
 		{
 			name: "*|300x250|www.website.com",
 			request: &openrtb2.BidRequest{
-				Site: &openrtb2.Site{
-					Domain: "www.website.com",
+				App: &openrtb2.App{
+					Publisher: &openrtb2.Publisher{Domain: "www.website.com"},
 				},
 				Imp: []openrtb2.Imp{{ID: "1234", Video: &openrtb2.Video{W: 300, H: 250}}},
 				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
 			},
 			floorExt: floorExt,
-
 			floorVal: 9.01,
 			floorCur: "USD",
 		},
 		{
-			name: "banner|300x600|*",
+			name: "siteDomain, banner|300x600|*",
 			request: &openrtb2.BidRequest{
 				Site: &openrtb2.Site{
 					Domain: "www.website.com",
 				},
 				Imp: []openrtb2.Imp{{ID: "1234", Banner: &openrtb2.Banner{Format: []openrtb2.Format{{W: 300, H: 600}}}}},
-				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "siteDomain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
 			},
 			floorExt: floorExt2,
 			floorVal: 4.01,
 			floorCur: "USD",
 		},
 		{
-			name: "video|*|*",
+			name: "siteDomain, video|*|*",
 			request: &openrtb2.BidRequest{
-				Site: &openrtb2.Site{
+				App: &openrtb2.App{
 					Domain: "www.website.com",
 				},
 				Imp: []openrtb2.Imp{{ID: "1234", Video: &openrtb2.Video{W: 640, H: 480}}},
-				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "siteDomain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
 			},
 			floorExt: floorExt2,
 
@@ -233,33 +316,47 @@ func TestUpdateImpsWithFloors1(t *testing.T) {
 			floorCur: "USD",
 		},
 		{
-			name: "*|300x250|www.website.com",
+			name: "pubDomain, *|300x250|www.website.com",
 			request: &openrtb2.BidRequest{
 				Site: &openrtb2.Site{
-					Domain: "www.website.com",
+					Publisher: &openrtb2.Publisher{Domain: "www.website.com"},
 				},
 				Imp: []openrtb2.Imp{{ID: "1234", Video: &openrtb2.Video{W: 300, H: 250}}},
-				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "pubDomain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
 			},
 			floorExt: floorExt2,
 
-			floorVal: 10.01,
+			floorVal: 9.01,
 			floorCur: "USD",
 		},
 		{
-			name: "Default Floor Value",
+			name: "pubDomain, Default Floor Value",
 			request: &openrtb2.BidRequest{
-				Site: &openrtb2.Site{
-					Domain: "www.website.com",
+				App: &openrtb2.App{
+					Publisher: &openrtb2.Publisher{Domain: "www.website.com"},
 				},
 				Imp: []openrtb2.Imp{{ID: "1234", Video: &openrtb2.Video{W: 300, H: 250}}},
-				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "pubDomain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
 			},
 			floorExt: floorExt3,
 
 			floorVal: 0.01,
 			floorCur: "USD",
 		},
+
+		{
+			name: "pubDomain, Default Floor Value",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Publisher: &openrtb2.Publisher{Domain: "www.website.com"},
+				},
+				Imp: []openrtb2.Imp{{ID: "1234", Video: &openrtb2.Video{W: 300, H: 250}}},
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "pubDomain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt: floorExt3,
+			floorVal: 0.01,
+			floorCur: "USD",
+		},
 	}
 	for _, tc := range tt {
 		t.Run(tc.name, func(t *testing.T) {
@@ -274,6 +371,306 @@ func TestUpdateImpsWithFloors1(t *testing.T) {
 	}
 }
 
+func TestUpdateImpsWithModelGroups(t *testing.T) {
+	floorExt := &openrtb_ext.PriceFloorRules{Data: &openrtb_ext.PriceFloorData{
+		SkipRate: 30,
+		ModelGroups: []openrtb_ext.PriceFloorModelGroup{{
+			ModelWeight:  50,
+			SkipRate:     10,
+			ModelVersion: "Version 1",
+			Schema:       openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}},
+			Values: map[string]float64{
+				"banner|300x250|www.website.com": 1.01,
+				"banner|300x250|*":               2.01,
+				"banner|300x600|www.website.com": 3.01,
+				"banner|300x600|*":               4.01,
+				"banner|728x90|www.website.com":  5.01,
+				"banner|728x90|*":                6.01,
+				"banner|*|www.website.com":       7.01,
+				"banner|*|*":                     8.01,
+				"*|300x250|www.website.com":      9.01,
+				"*|300x250|*":                    10.01,
+				"*|300x600|www.website.com":      11.01,
+				"*|300x600|*":                    12.01,
+				"*|728x90|www.website.com":       13.01,
+				"*|728x90|*":                     14.01,
+				"*|*|www.website.com":            15.01,
+				"*|*|*":                          16.01,
+			}, Default: 0.01},
+			{
+				ModelWeight:  50,
+				SkipRate:     20,
+				ModelVersion: "Version 2",
+				Schema:       openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}},
+				Values: map[string]float64{
+					"banner|300x250|www.website.com": 1.01,
+					"banner|300x250|*":               2.01,
+					"banner|300x600|www.website.com": 3.01,
+					"banner|300x600|*":               4.01,
+					"banner|728x90|www.website.com":  5.01,
+					"banner|728x90|*":                6.01,
+					"banner|*|www.website.com":       7.01,
+					"banner|*|*":                     8.01,
+					"*|300x250|www.website.com":      9.01,
+					"*|300x250|*":                    10.01,
+					"*|300x600|www.website.com":      11.01,
+					"*|300x600|*":                    12.01,
+					"*|728x90|www.website.com":       13.01,
+					"*|728x90|*":                     14.01,
+					"*|*|www.website.com":            15.01,
+					"*|*|*":                          16.01,
+				}, Default: 0.01},
+		}}}
+
+	tt := []struct {
+		name         string
+		floorExt     *openrtb_ext.PriceFloorRules
+		request      *openrtb2.BidRequest
+		floorVal     float64
+		floorCur     string
+		ModelVersion string
+	}{
+		{
+			name: "banner|300x250|www.website.com",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Domain: "www.website.com",
+				},
+				Imp: []openrtb2.Imp{{ID: "1234", Banner: &openrtb2.Banner{Format: []openrtb2.Format{{W: 300, H: 250}}}}},
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt:     floorExt,
+			floorVal:     1.01,
+			floorCur:     "USD",
+			ModelVersion: "Version 1",
+		},
+		{
+			name: "banner|300x600|www.website.com",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Domain: "www.website.com",
+				},
+				Imp: []openrtb2.Imp{{ID: "1234", Banner: &openrtb2.Banner{Format: []openrtb2.Format{{W: 300, H: 600}}}}},
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt:     floorExt,
+			floorVal:     3.01,
+			floorCur:     "USD",
+			ModelVersion: "Version 2",
+		},
+		{
+			name: "*|*|www.website.com",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Domain: "www.website.com",
+				},
+				Imp: []openrtb2.Imp{{ID: "1234", Video: &openrtb2.Video{W: 640, H: 480}}},
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt: floorExt,
+
+			floorVal:     15.01,
+			floorCur:     "USD",
+			ModelVersion: "Version 2",
+		},
+		{
+			name: "*|300x250|www.website.com",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Domain: "www.website.com",
+				},
+				Imp: []openrtb2.Imp{{ID: "1234", Video: &openrtb2.Video{W: 300, H: 250}}},
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt: floorExt,
+
+			floorVal:     9.01,
+			floorCur:     "USD",
+			ModelVersion: "Version 2",
+		},
+	}
+	for _, tc := range tt {
+		t.Run(tc.name, func(t *testing.T) {
+			_ = UpdateImpsWithFloors(tc.floorExt, tc.request)
+			if tc.floorExt.Skipped != nil && *tc.floorExt.Skipped != true {
+				if !reflect.DeepEqual(tc.request.Imp[0].BidFloor, tc.floorVal) {
+					t.Errorf("Floor Value error: \nreturn:\t%v\nwant:\t%v", tc.request.Imp[0].BidFloor, tc.floorVal)
+				}
+				if !reflect.DeepEqual(tc.request.Imp[0].BidFloorCur, tc.floorCur) {
+					t.Errorf("Floor Currency error: \nreturn:\t%v\nwant:\t%v", tc.request.Imp[0].BidFloor, tc.floorCur)
+				}
+
+				if !reflect.DeepEqual(tc.floorExt.Data.ModelGroups[0].ModelVersion, tc.ModelVersion) {
+					t.Errorf("Floor Model Version mismatch error: \nreturn:\t%v\nwant:\t%v", tc.floorExt.Data.ModelGroups[0].ModelVersion, tc.ModelVersion)
+				}
+			}
+		})
+	}
+}
+
+func TestUpdateImpsWithInvalidModelGroups(t *testing.T) {
+	floorExt := &openrtb_ext.PriceFloorRules{Data: &openrtb_ext.PriceFloorData{
+		ModelGroups: []openrtb_ext.PriceFloorModelGroup{{
+			ModelWeight:  50,
+			SkipRate:     110,
+			ModelVersion: "Version 1",
+			Schema:       openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}},
+			Values: map[string]float64{
+				"banner|300x250|www.website.com": 1.01,
+				"banner|300x250|*":               2.01,
+				"banner|300x600|www.website.com": 3.01,
+				"banner|300x600|*":               4.01,
+				"banner|728x90|www.website.com":  5.01,
+				"banner|728x90|*":                6.01,
+				"banner|*|www.website.com":       7.01,
+				"banner|*|*":                     8.01,
+				"*|300x250|www.website.com":      9.01,
+				"*|300x250|*":                    10.01,
+				"*|300x600|www.website.com":      11.01,
+				"*|300x600|*":                    12.01,
+				"*|728x90|www.website.com":       13.01,
+				"*|728x90|*":                     14.01,
+				"*|*|www.website.com":            15.01,
+				"*|*|*":                          16.01,
+			}, Default: 0.01},
+			{
+				ModelWeight:  50,
+				SkipRate:     20,
+				ModelVersion: "Version 2",
+				Schema:       openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}},
+				Values: map[string]float64{
+					"banner|300x250|www.website.com": 1.01,
+					"banner|300x250|*":               2.01,
+					"banner|300x600|www.website.com": 3.01,
+					"banner|300x600|*":               4.01,
+					"banner|728x90|www.website.com":  5.01,
+					"banner|728x90|*":                6.01,
+					"banner|*|www.website.com":       7.01,
+					"banner|*|*":                     8.01,
+					"*|300x250|www.website.com":      9.01,
+					"*|300x250|*":                    10.01,
+					"*|300x600|www.website.com":      11.01,
+					"*|300x600|*":                    12.01,
+					"*|728x90|www.website.com":       13.01,
+					"*|728x90|*":                     14.01,
+					"*|*|www.website.com":            15.01,
+					"*|*|*":                          16.01,
+				}, Default: 0.01},
+		}}}
+
+	floorExt2 := &openrtb_ext.PriceFloorRules{Data: &openrtb_ext.PriceFloorData{
+		ModelGroups: []openrtb_ext.PriceFloorModelGroup{{
+			ModelWeight:  -1,
+			SkipRate:     10,
+			ModelVersion: "Version 1",
+			Schema:       openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}},
+			Values: map[string]float64{
+				"banner|300x250|www.website.com": 1.01,
+				"banner|300x250|*":               2.01,
+				"banner|300x600|www.website.com": 3.01,
+				"banner|300x600|*":               4.01,
+				"banner|728x90|www.website.com":  5.01,
+				"banner|728x90|*":                6.01,
+				"banner|*|www.website.com":       7.01,
+				"banner|*|*":                     8.01,
+				"*|300x250|www.website.com":      9.01,
+				"*|300x250|*":                    10.01,
+				"*|300x600|www.website.com":      11.01,
+				"*|300x600|*":                    12.01,
+				"*|728x90|www.website.com":       13.01,
+				"*|728x90|*":                     14.01,
+				"*|*|www.website.com":            15.01,
+				"*|*|*":                          16.01,
+			}, Default: 0.01},
+			{
+				ModelWeight:  50,
+				SkipRate:     20,
+				ModelVersion: "Version 2",
+				Schema:       openrtb_ext.PriceFloorSchema{Fields: []string{"mediaType", "size", "domain"}},
+				Values: map[string]float64{
+					"banner|300x250|www.website.com": 1.01,
+					"banner|300x250|*":               2.01,
+					"banner|300x600|www.website.com": 3.01,
+					"banner|300x600|*":               4.01,
+					"banner|728x90|www.website.com":  5.01,
+					"banner|728x90|*":                6.01,
+					"banner|*|www.website.com":       7.01,
+					"banner|*|*":                     8.01,
+					"*|300x250|www.website.com":      9.01,
+					"*|300x250|*":                    10.01,
+					"*|300x600|www.website.com":      11.01,
+					"*|300x600|*":                    12.01,
+					"*|728x90|www.website.com":       13.01,
+					"*|728x90|*":                     14.01,
+					"*|*|www.website.com":            15.01,
+					"*|*|*":                          16.01,
+				}, Default: 0.01},
+		}}}
+
+	tt := []struct {
+		name         string
+		floorExt     *openrtb_ext.PriceFloorRules
+		request      *openrtb2.BidRequest
+		floorVal     float64
+		floorCur     string
+		ModelVersion string
+		Err          string
+	}{
+		{
+			name: "Invalid Skip Rate in model Group 1, with banner|300x250|www.website.com",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Domain: "www.website.com",
+				},
+				Imp: []openrtb2.Imp{{ID: "1234", Banner: &openrtb2.Banner{Format: []openrtb2.Format{{W: 300, H: 250}}}}},
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt:     floorExt,
+			floorVal:     1.01,
+			floorCur:     "USD",
+			ModelVersion: "Version 2",
+			Err:          "Invalid Floor Model = 'Version 1' due to SkipRate = '110'",
+		},
+		{
+			name: "Invalid model weight Model Group 1, with banner|300x250|www.website.com",
+			request: &openrtb2.BidRequest{
+				Site: &openrtb2.Site{
+					Domain: "www.website.com",
+				},
+				Imp: []openrtb2.Imp{{ID: "1234", Banner: &openrtb2.Banner{Format: []openrtb2.Format{{W: 300, H: 250}}}}},
+				Ext: json.RawMessage(`{"prebid": { "floors": {"data": {"currency": "USD","skipRate": 0,"schema": {"fields": [ "mediaType", "size", "domain" ] },"values": {  "banner|300x250|www.website.com": 1.01, "banner|300x250|*": 2.01, "banner|300x600|www.website.com": 3.01,  "banner|300x600|*": 4.01, "banner|728x90|www.website.com": 5.01, "banner|728x90|*": 6.01, "banner|*|www.website.com": 7.01, "banner|*|*": 8.01, "*|300x250|www.website.com": 9.01, "*|300x250|*": 10.01, "*|300x600|www.website.com": 11.01,  "*|300x600|*": 12.01,  "*|728x90|www.website.com": 13.01, "*|728x90|*": 14.01,  "*|*|www.website.com": 15.01, "*|*|*": 16.01  }, "default": 1}}}}`),
+			},
+			floorExt:     floorExt2,
+			floorVal:     1.01,
+			floorCur:     "USD",
+			ModelVersion: "Version 2",
+			Err:          "Invalid Floor Model = 'Version 1' due to ModelWeight = '-1'",
+		},
+	}
+	for _, tc := range tt {
+		t.Run(tc.name, func(t *testing.T) {
+			ErrList := UpdateImpsWithFloors(tc.floorExt, tc.request)
+			if tc.floorExt.Skipped != nil && *tc.floorExt.Skipped != true {
+				if !reflect.DeepEqual(tc.request.Imp[0].BidFloor, tc.floorVal) {
+					t.Errorf("Floor Value error: \nreturn:\t%v\nwant:\t%v", tc.request.Imp[0].BidFloor, tc.floorVal)
+				}
+				if !reflect.DeepEqual(tc.request.Imp[0].BidFloorCur, tc.floorCur) {
+					t.Errorf("Floor Currency error: \nreturn:\t%v\nwant:\t%v", tc.request.Imp[0].BidFloor, tc.floorCur)
+				}
+
+				if !reflect.DeepEqual(tc.floorExt.Data.ModelGroups[0].ModelVersion, tc.ModelVersion) {
+					t.Errorf("Floor Model Version mismatch error: \nreturn:\t%v\nwant:\t%v", tc.floorExt.Data.ModelGroups[0].ModelVersion, tc.ModelVersion)
+				}
+			}
+
+			if !reflect.DeepEqual(ErrList[0].Error(), tc.Err) {
+				t.Errorf("Incorrect Error: \nreturn:\t%v\nwant:\t%v", ErrList[0].Error(), tc.Err)
+			}
+
+		})
+	}
+}
+
 func TestCreateRuleKeys(t *testing.T) {
 	tt := []struct {
 		name        string
diff --git a/openrtb_ext/request.go b/openrtb_ext/request.go
index 3afa3dec..b7b9c102 100644
--- a/openrtb_ext/request.go
+++ b/openrtb_ext/request.go
@@ -74,8 +74,8 @@ type PriceFloorSchema struct {
 }
 type PriceFloorModelGroup struct {
 	Currency     string
-	ModelWeigth  int                `json:"modelWeight,omitempty"`
-	ModelVersion int                `json:"modelVersion,omitempty"`
+	ModelWeight  int                `json:"modelWeight,omitempty"`
+	ModelVersion string             `json:"modelVersion,omitempty"`
 	SkipRate     int                `json:"skipRate,omitempty"`
 	Schema       PriceFloorSchema   `json:"schema,omitempty"`
 	Values       map[string]float64 `json:"values,omitempty"`
@@ -102,16 +102,16 @@ type PriceFloorEndpoint struct {
 }
 
 type PriceFloorRules struct {
-	FloorMin      float64               `json:"floorMin,omitempty"`
-	FloorMinCur   string                `json:"floorMincur,omitempty"`
-	FloorProvider string                `json:"floorProvider,omitempty"`
-	Enforcement   PriceFloorEnforcement `json:"enforcement,omitempty"`
-	SkipRate      int                   `json:"skipRate,omitempty"`
-	Location      PriceFloorEndpoint    `json:"location,omitempty"`
-	Data          PriceFloorData        `json:"data,omitempty"`
-	Enabled       bool                  `json:"enabled,omitempty"`
-	Skipped       bool
+	FloorMin    float64                `json:"floorMin,omitempty"`
+	FloorMinCur string                 `json:"floorMincur,omitempty"`
+	SkipRate    int                    `json:"skipRate,omitempty"`
+	Location    *PriceFloorEndpoint    `json:"location,omitempty"`
+	Data        *PriceFloorData        `json:"data,omitempty"`
+	Enforcement *PriceFloorEnforcement `json:"enforcement,omitempty"`
+	Enabled     *bool                  `json:"enabled,omitempty"`
+	Skipped     *bool
 }
+
 type BidderConfig struct {
 	Bidders []string `json:"bidders,omitempty"`
 	Config  *Config  `json:"config,omitempty"`
diff --git a/router/router.go b/router/router.go
index ed085e9c..0f1f55fb 100644
--- a/router/router.go
+++ b/router/router.go
@@ -133,8 +133,8 @@ type Router struct {
 }
 
 func New(cfg *config.Configuration, rateConvertor *currency.RateConverter) (r *Router, err error) {
-	const schemaDirectory = "/home/http/GO_SERVER/dmhbserver/static/bidder-params"
-	const infoDirectory = "/home/http/GO_SERVER/dmhbserver/static/bidder-info"
+	const schemaDirectory = "/Users/jaydeepmohite/go/src/header-bidding/resource/static/bidder-params"
+	const infoDirectory = "/Users/jaydeepmohite/go/src/header-bidding/resource/static/bidder-info"
 
 	r = &Router{
 		Router: httprouter.New(),
